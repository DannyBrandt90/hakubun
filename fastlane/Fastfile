# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

platform :ios do
    ios_dir = File.expand_path('../ios')

    desc "Get certificates"
    lane :certificates do
        sync_code_signing(
            git_branch: "main",
            type: "development",
            app_identifier: "io.hakubun.app",
            force_for_new_devices: true,
            readonly: true
        )

        # You can repeat the sync_code_signing with other types of certificates such as appstore and adhoc
        sync_code_signing(
            git_branch: "main",
            type: "appstore",
            app_identifier: "io.hakubun.app",
            readonly: true
        )
    end

    desc "Generate new certificates"
    lane :generate_new_certificates do
      sync_code_signing(
        git_branch: "main",
        type: "development",
        app_identifier: "io.hakubun.app",
        force_for_new_devices: true,
        readonly: false
      )
    end
  

    lane :test do
        run_tests(
            project: File.join(ios_dir, "App/App.xcodeproj")
        )
    end

    lane :beta do
        build_app(
            scheme: "App", 
            project: File.join(ios_dir, "App/App.xcodeproj"),
            clean: true,
            )
      end
    
end

platform :android do
    android_dir = File.expand_path('../android')

    lane :buildApk do
        gradle(task: 'clean', project_dir: android_dir)
        gradle(
            task: "assemble", 
            project_dir: android_dir,   
        )
        APK_LOCATION = "#{lane_context[SharedValues::GRADLE_APK_OUTPUT_PATH]}"
        sh("cp", "#{APK_LOCATION}", ENV["OUTPUT_PATH"])
    end

    lane :buildBundle do
        gradle(task: 'clean', project_dir: android_dir)
        gradle(
            task: "bundleRelease", 
            project_dir: android_dir,
            properties: {
                "android.injected.signing.store.file" => File.join(Dir.pwd, "..", ENV["KEYSTORE_FILE_PATH"]),
                "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
                "android.injected.signing.key.alias" => ENV["KEYSTORE_ALIAS"],
                "android.injected.signing.key.password" => ENV["KEYSTORE_PASSWORD"],
            }
        )

        AAB_LOCATION = "#{lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]}"
        sh("cp", "#{AAB_LOCATION}", ENV["OUTPUT_PATH"])
    end
end